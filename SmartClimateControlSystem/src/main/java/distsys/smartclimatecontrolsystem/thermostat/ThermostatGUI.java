package distsys.smartclimatecontrolsystem.thermostat;

import generated.grpc.thermostat.ThermostatGrpc;
import generated.grpc.thermostat.ThermostatOuterClass.AutoAdjustRequest;
import generated.grpc.thermostat.ThermostatOuterClass.Empty;
import generated.grpc.thermostat.ThermostatOuterClass.StatusResponse;
import generated.grpc.thermostat.ThermostatOuterClass.TemperatureRequest;
import generated.grpc.thermostat.ThermostatOuterClass.TemperatureResponse;
import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;

/**
 * GUI for controlling thermostat features including:
 * - Setting temperature (Unary)
 * - Getting current temperature (Unary)
 * - Enabling/disabling auto-adjust mode (Unary)
 * - Streaming temperature updates (Server Streaming)
 * 
 * @author guilhermesilveira
 */
public class ThermostatGUI extends javax.swing.JFrame {

    private ThermostatGrpc.ThermostatBlockingStub blockingStub;
    private boolean autoAdjustEnabled = false;
    
    public ThermostatGUI() {
        initComponents();
        setTitle("Smart Climate Control â€“ Thermostat");
        
        // Set up the gRPC channel and stub
        ManagedChannel channel = ManagedChannelBuilder
        .forAddress("localhost", 50051)
        .usePlaintext()
        .build();

        blockingStub = ThermostatGrpc.newBlockingStub(channel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        btnSetTemp = new javax.swing.JButton();
        btnGetTemp = new javax.swing.JButton();
        btnAutoAdjust = new javax.swing.JButton();
        btnStreamUpdates = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Enter Temperature:");

        btnSetTemp.setText("Set Temperature");
        btnSetTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetTempActionPerformed(evt);
            }
        });

        btnGetTemp.setText("Current Temperature");
        btnGetTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetTempActionPerformed(evt);
            }
        });

        btnAutoAdjust.setText("Auto Adjust");
        btnAutoAdjust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutoAdjustActionPerformed(evt);
            }
        });

        btnStreamUpdates.setText("Temperature Updates");
        btnStreamUpdates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStreamUpdatesActionPerformed(evt);
            }
        });

        txtOutput.setColumns(20);
        txtOutput.setRows(5);
        jScrollPane1.setViewportView(txtOutput);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnStreamUpdates, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAutoAdjust, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGetTemp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSetTemp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(txtTemperature, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSetTemp)
                        .addGap(18, 18, 18)
                        .addComponent(btnGetTemp)
                        .addGap(18, 18, 18)
                        .addComponent(btnAutoAdjust)
                        .addGap(18, 18, 18)
                        .addComponent(btnStreamUpdates)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Handles Set Temperature button click
    private void btnSetTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetTempActionPerformed
        try {
            float temp = Float.parseFloat(txtTemperature.getText());
            TemperatureRequest request = TemperatureRequest.newBuilder()
                .setTemperature(temp)
                .build();
            TemperatureResponse response = blockingStub.setTemperature(request);
            txtOutput.append("Temp set to: " + response.getCurrentTemperature() + "\n");
        } catch (NumberFormatException ex) {
            txtOutput.append("Invalid number.\n");
        } catch (Exception ex) {
            txtOutput.append("Could not connect to Thermostat service. Is the server running?\n");
        }
    }//GEN-LAST:event_btnSetTempActionPerformed

    // Handles Get Temperature button click
    private void btnGetTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetTempActionPerformed
        try {
            TemperatureResponse response = blockingStub.getCurrentTemperature(Empty.newBuilder().build());
            txtOutput.append("Current Temp: " + response.getCurrentTemperature() + "\n");
        } catch (Exception ex) {
            txtOutput.append("Failed to retrieve temperature. Please check if the server is running.\n");
        }
    }//GEN-LAST:event_btnGetTempActionPerformed

    // Handles Auto Adjust button toogle
    private void btnAutoAdjustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutoAdjustActionPerformed
        try{
            autoAdjustEnabled = !autoAdjustEnabled;
            // Toggle state
            AutoAdjustRequest request = AutoAdjustRequest.newBuilder()
            .setEnable(autoAdjustEnabled)
            .build();
            StatusResponse response = blockingStub.autoAdjustMode(request);
            txtOutput.append(response.getMessage() + "\n");
        } catch (Exception ex){
            txtOutput.append("Error streaming temperature updates. Make sure the server is active.\n");
        }
    }//GEN-LAST:event_btnAutoAdjustActionPerformed

    // Handles Temperature Updates button click (server streaming)
    private void btnStreamUpdatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStreamUpdatesActionPerformed
        txtOutput.append("Starting temperature stream...\n");

        // Run streaming in a separate thread to avoid blocking GUI
        new Thread(() -> {
            try {
                blockingStub.streamTemperatureUpdates(Empty.newBuilder().build())
                    .forEachRemaining(update -> {
                        txtOutput.append(update.getCurrentTemperature() + "\n");
                    });
                txtOutput.append("Stream ended.\n");
            } catch (Exception ex) {
                txtOutput.append("Error streaming temperature updates. Make sure the server is active.\n");
            }
        }).start();
    }//GEN-LAST:event_btnStreamUpdatesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThermostatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThermostatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThermostatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThermostatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThermostatGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAutoAdjust;
    private javax.swing.JButton btnGetTemp;
    private javax.swing.JButton btnSetTemp;
    private javax.swing.JButton btnStreamUpdates;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtOutput;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables
}
